<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.project" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

   <!--  <mvc:annotation-driven /> 是一种简写形式，
               完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。
        <mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
             是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，
       @NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。
              后面，我们处理响应ajax请求时，就使用到了对json的支持。后面，对action写JUnit单元测试时，
              要从spring IOC容器中取DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean，来完成测试，
              取的时候要知道是<mvc:annotation-driven />这一句注册的这两个bean。 -->
    <!-- 默认的注解映射的支持 -->  
    <mvc:annotation-driven />  

	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- <mvc:interceptors/> 是一种简写形式。
	        通过看前面的大图，知道，我们可以配置多个HandlerMapping。<mvc:interceptors/>会为每一个HandlerMapping，注入一个拦截器。
	        其实我们也可以手动配置为每个HandlerMapping注入一个拦截器。 -->
	<!-- 拦截器 -->
    <!-- <mvc:interceptors></mvc:interceptors>  -->

    <!-- 会把"/**" url,注册到SimpleUrlHandlerMapping的urlMap中.性能应该不好,在过滤连的最后一层,当找不到所有适合路径的时候最后响应图片 -->
	<!--  对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	
	<!-- 定义无需Controller的url<->view直接映射 -->
	<mvc:view-controller path="/" view-name="login" />
</beans>
